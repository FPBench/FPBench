;; -*- mode: scheme -*-
;; Exhaustive at depth 1

(FPCore () :precision binary80 (if (< 1.0 1.0) 1 0))

(FPCore (arg1) :precision binary80 (if (< arg1 1.0) 1 0))

(FPCore (arg1) :precision binary80 (if (< 1.0 arg1) 1 0))

(FPCore (arg1) :precision binary80 (if (< arg1 arg1) 1 0))

(FPCore (arg1 arg2) :precision binary80 (if (< arg1 arg2) 1 0))

(FPCore (arg1 arg2) :precision binary80 (if (< arg2 arg1) 1 0))

(FPCore () :precision binary80 (if (> 1.0 1.0) 1 0))

(FPCore (arg1) :precision binary80 (if (> arg1 1.0) 1 0))

(FPCore (arg1) :precision binary80 (if (> 1.0 arg1) 1 0))

(FPCore (arg1) :precision binary80 (if (> arg1 arg1) 1 0))

(FPCore (arg1 arg2) :precision binary80 (if (> arg1 arg2) 1 0))

(FPCore (arg1 arg2) :precision binary80 (if (> arg2 arg1) 1 0))

(FPCore () :precision binary80 (if (<= 1.0 1.0) 1 0))

(FPCore (arg1) :precision binary80 (if (<= arg1 1.0) 1 0))

(FPCore (arg1) :precision binary80 (if (<= 1.0 arg1) 1 0))

(FPCore (arg1) :precision binary80 (if (<= arg1 arg1) 1 0))

(FPCore (arg1 arg2) :precision binary80 (if (<= arg1 arg2) 1 0))

(FPCore (arg1 arg2) :precision binary80 (if (<= arg2 arg1) 1 0))

(FPCore () :precision binary80 (if (>= 1.0 1.0) 1 0))

(FPCore (arg1) :precision binary80 (if (>= arg1 1.0) 1 0))

(FPCore (arg1) :precision binary80 (if (>= 1.0 arg1) 1 0))

(FPCore (arg1) :precision binary80 (if (>= arg1 arg1) 1 0))

(FPCore (arg1 arg2) :precision binary80 (if (>= arg1 arg2) 1 0))

(FPCore (arg1 arg2) :precision binary80 (if (>= arg2 arg1) 1 0))

(FPCore () :precision binary80 (if (== 1.0 1.0) 1 0))

(FPCore (arg1) :precision binary80 (if (== arg1 1.0) 1 0))

(FPCore (arg1) :precision binary80 (if (== 1.0 arg1) 1 0))

(FPCore (arg1) :precision binary80 (if (== arg1 arg1) 1 0))

(FPCore (arg1 arg2) :precision binary80 (if (== arg1 arg2) 1 0))

(FPCore (arg1 arg2) :precision binary80 (if (== arg2 arg1) 1 0))

(FPCore () :precision binary80 (if (!= 1.0 1.0) 1 0))

(FPCore (arg1) :precision binary80 (if (!= arg1 1.0) 1 0))

(FPCore (arg1) :precision binary80 (if (!= 1.0 arg1) 1 0))

(FPCore (arg1) :precision binary80 (if (!= arg1 arg1) 1 0))

(FPCore (arg1 arg2) :precision binary80 (if (!= arg1 arg2) 1 0))

(FPCore (arg1 arg2) :precision binary80 (if (!= arg2 arg1) 1 0))

(FPCore () :precision binary80 (if (isfinite 1.0) 1 0))

(FPCore (arg1) :precision binary80 (if (isfinite arg1) 1 0))

(FPCore () :precision binary80 (if (isinf 1.0) 1 0))

(FPCore (arg1) :precision binary80 (if (isinf arg1) 1 0))

(FPCore () :precision binary80 (if (isnan 1.0) 1 0))

(FPCore (arg1) :precision binary80 (if (isnan arg1) 1 0))

(FPCore () :precision binary80 (if (isnormal 1.0) 1 0))

(FPCore (arg1) :precision binary80 (if (isnormal arg1) 1 0))

(FPCore () :precision binary80 (if (signbit 1.0) 1 0))

(FPCore (arg1) :precision binary80 (if (signbit arg1) 1 0))

